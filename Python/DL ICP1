{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyONSx1buZk9JDNWEO/6Awv2",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/PardhaSaradhi74/Python/blob/master/Python/DL%20ICP1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "156aun2lfeze",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "9d2a1c68-483b-48d8-ad29-2c630c8f49f1"
      },
      "source": [
        "# Importing the libraries\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers.core import Dense, Activation\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Load the dataset\n",
        "data = pd.read_csv(\"diabetes.csv\", header=None).values\n",
        "\n",
        "# Splitting into training and testing data\n",
        "X_train, X_test, Y_train, Y_test = train_test_split(data[:, 0:8], data[:, 8],\n",
        "                                                    test_size=0.25, random_state=87)\n",
        "np.random.seed(155)\n",
        "model = Sequential()  # create model\n",
        "model.add(Dense(20, input_dim=8, activation='relu'))  # hidden layer\n",
        "model.add(Dense(25, input_dim=8, activation='relu'))  # hidden layer\n",
        "model.add(Dense(30, input_dim=8, activation='relu'))  # hidden layer\n",
        "model.add(Dense(1, activation='sigmoid'))  # output layer\n",
        "model.compile(loss='binary_crossentropy',\n",
        "              optimizer='adam', metrics=['acc'])\n",
        "model.fit(X_train, Y_train, epochs=100,\n",
        "          initial_epoch=0)\n",
        "print(model.summary())\n",
        "print(model.evaluate(X_test, Y_test))"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "576/576 [==============================] - 0s 691us/step - loss: 5.8898 - acc: 0.4375\n",
            "Epoch 2/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 1.4404 - acc: 0.6510\n",
            "Epoch 3/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.8703 - acc: 0.6198\n",
            "Epoch 4/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.7407 - acc: 0.6424\n",
            "Epoch 5/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.6938 - acc: 0.6719\n",
            "Epoch 6/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.6348 - acc: 0.6806\n",
            "Epoch 7/100\n",
            "576/576 [==============================] - 0s 58us/step - loss: 0.6153 - acc: 0.6806\n",
            "Epoch 8/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.5999 - acc: 0.6944\n",
            "Epoch 9/100\n",
            "576/576 [==============================] - 0s 56us/step - loss: 0.6449 - acc: 0.6979\n",
            "Epoch 10/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.6133 - acc: 0.6944\n",
            "Epoch 11/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5914 - acc: 0.7101\n",
            "Epoch 12/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5886 - acc: 0.6875\n",
            "Epoch 13/100\n",
            "576/576 [==============================] - 0s 52us/step - loss: 0.5874 - acc: 0.7049\n",
            "Epoch 14/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.5680 - acc: 0.6875\n",
            "Epoch 15/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5756 - acc: 0.7118\n",
            "Epoch 16/100\n",
            "576/576 [==============================] - 0s 55us/step - loss: 0.5738 - acc: 0.6927\n",
            "Epoch 17/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5425 - acc: 0.7274\n",
            "Epoch 18/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.5506 - acc: 0.7240\n",
            "Epoch 19/100\n",
            "576/576 [==============================] - 0s 52us/step - loss: 0.5593 - acc: 0.7014\n",
            "Epoch 20/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5632 - acc: 0.7292\n",
            "Epoch 21/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5374 - acc: 0.7361\n",
            "Epoch 22/100\n",
            "576/576 [==============================] - 0s 56us/step - loss: 0.5530 - acc: 0.7292\n",
            "Epoch 23/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.5276 - acc: 0.7292\n",
            "Epoch 24/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.5950 - acc: 0.6858\n",
            "Epoch 25/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.5675 - acc: 0.7153\n",
            "Epoch 26/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5440 - acc: 0.7517\n",
            "Epoch 27/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5335 - acc: 0.7240\n",
            "Epoch 28/100\n",
            "576/576 [==============================] - 0s 55us/step - loss: 0.5320 - acc: 0.7361\n",
            "Epoch 29/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5515 - acc: 0.7378\n",
            "Epoch 30/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.5631 - acc: 0.7240\n",
            "Epoch 31/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5766 - acc: 0.6892\n",
            "Epoch 32/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.5431 - acc: 0.7396\n",
            "Epoch 33/100\n",
            "576/576 [==============================] - 0s 53us/step - loss: 0.5174 - acc: 0.7604\n",
            "Epoch 34/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5125 - acc: 0.7517\n",
            "Epoch 35/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5415 - acc: 0.7257\n",
            "Epoch 36/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5389 - acc: 0.7188\n",
            "Epoch 37/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.5368 - acc: 0.7483\n",
            "Epoch 38/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5220 - acc: 0.7309\n",
            "Epoch 39/100\n",
            "576/576 [==============================] - 0s 53us/step - loss: 0.5288 - acc: 0.7465\n",
            "Epoch 40/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5057 - acc: 0.7552\n",
            "Epoch 41/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5161 - acc: 0.7396\n",
            "Epoch 42/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5582 - acc: 0.7135\n",
            "Epoch 43/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5323 - acc: 0.7222\n",
            "Epoch 44/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5258 - acc: 0.7552\n",
            "Epoch 45/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5229 - acc: 0.7361\n",
            "Epoch 46/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.5421 - acc: 0.7222\n",
            "Epoch 47/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5241 - acc: 0.7188\n",
            "Epoch 48/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5239 - acc: 0.7431\n",
            "Epoch 49/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5047 - acc: 0.7448\n",
            "Epoch 50/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.4992 - acc: 0.7535\n",
            "Epoch 51/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5016 - acc: 0.7552\n",
            "Epoch 52/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5009 - acc: 0.7639\n",
            "Epoch 53/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.4979 - acc: 0.7483\n",
            "Epoch 54/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5024 - acc: 0.7639\n",
            "Epoch 55/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.5028 - acc: 0.7604\n",
            "Epoch 56/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.4910 - acc: 0.7569\n",
            "Epoch 57/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5646 - acc: 0.7309\n",
            "Epoch 58/100\n",
            "576/576 [==============================] - 0s 53us/step - loss: 0.6136 - acc: 0.6910\n",
            "Epoch 59/100\n",
            "576/576 [==============================] - 0s 44us/step - loss: 0.5236 - acc: 0.7396\n",
            "Epoch 60/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5068 - acc: 0.7309\n",
            "Epoch 61/100\n",
            "576/576 [==============================] - 0s 44us/step - loss: 0.4862 - acc: 0.7622\n",
            "Epoch 62/100\n",
            "576/576 [==============================] - 0s 53us/step - loss: 0.4887 - acc: 0.7587\n",
            "Epoch 63/100\n",
            "576/576 [==============================] - 0s 57us/step - loss: 0.4857 - acc: 0.7708\n",
            "Epoch 64/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5002 - acc: 0.7483\n",
            "Epoch 65/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5115 - acc: 0.7569\n",
            "Epoch 66/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5157 - acc: 0.7535\n",
            "Epoch 67/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5253 - acc: 0.7344\n",
            "Epoch 68/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5237 - acc: 0.7326\n",
            "Epoch 69/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5005 - acc: 0.7708\n",
            "Epoch 70/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.4868 - acc: 0.7639\n",
            "Epoch 71/100\n",
            "576/576 [==============================] - 0s 43us/step - loss: 0.5109 - acc: 0.7656\n",
            "Epoch 72/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.4977 - acc: 0.7396\n",
            "Epoch 73/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5072 - acc: 0.7517\n",
            "Epoch 74/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5306 - acc: 0.7396\n",
            "Epoch 75/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.4848 - acc: 0.7778\n",
            "Epoch 76/100\n",
            "576/576 [==============================] - 0s 58us/step - loss: 0.4829 - acc: 0.7795\n",
            "Epoch 77/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5082 - acc: 0.7431\n",
            "Epoch 78/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5200 - acc: 0.7483\n",
            "Epoch 79/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5382 - acc: 0.7361\n",
            "Epoch 80/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.4708 - acc: 0.7812\n",
            "Epoch 81/100\n",
            "576/576 [==============================] - 0s 53us/step - loss: 0.4698 - acc: 0.7812\n",
            "Epoch 82/100\n",
            "576/576 [==============================] - 0s 53us/step - loss: 0.5033 - acc: 0.7535\n",
            "Epoch 83/100\n",
            "576/576 [==============================] - 0s 54us/step - loss: 0.4907 - acc: 0.7552\n",
            "Epoch 84/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.4823 - acc: 0.7656\n",
            "Epoch 85/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.4727 - acc: 0.7726\n",
            "Epoch 86/100\n",
            "576/576 [==============================] - 0s 53us/step - loss: 0.4858 - acc: 0.7604\n",
            "Epoch 87/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5043 - acc: 0.7726\n",
            "Epoch 88/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.4782 - acc: 0.7708\n",
            "Epoch 89/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.4743 - acc: 0.7726\n",
            "Epoch 90/100\n",
            "576/576 [==============================] - 0s 52us/step - loss: 0.4629 - acc: 0.7760\n",
            "Epoch 91/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.4600 - acc: 0.7917\n",
            "Epoch 92/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.4661 - acc: 0.7743\n",
            "Epoch 93/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.4621 - acc: 0.7899\n",
            "Epoch 94/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.4629 - acc: 0.7743\n",
            "Epoch 95/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.4548 - acc: 0.7847\n",
            "Epoch 96/100\n",
            "576/576 [==============================] - 0s 54us/step - loss: 0.4617 - acc: 0.7622\n",
            "Epoch 97/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.4916 - acc: 0.7743\n",
            "Epoch 98/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.4555 - acc: 0.7708\n",
            "Epoch 99/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.4451 - acc: 0.7934\n",
            "Epoch 100/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.4587 - acc: 0.7812\n",
            "Model: \"sequential_1\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_1 (Dense)              (None, 20)                180       \n",
            "_________________________________________________________________\n",
            "dense_2 (Dense)              (None, 25)                525       \n",
            "_________________________________________________________________\n",
            "dense_3 (Dense)              (None, 30)                780       \n",
            "_________________________________________________________________\n",
            "dense_4 (Dense)              (None, 1)                 31        \n",
            "=================================================================\n",
            "Total params: 1,516\n",
            "Trainable params: 1,516\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "192/192 [==============================] - 0s 139us/step\n",
            "[0.6024550497531891, 0.703125]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mxla0fIWf1rt",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "bdfb3c5a-97e3-4797-a82c-91c92f2edd0b"
      },
      "source": [
        "# Importing the libraries\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers.core import Dense, Activation\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Load the dataset\n",
        "data = pd.read_csv(\"diabetes.csv\", header=None).values\n",
        "\n",
        "# Splitting into training and testing data\n",
        "X_train, X_test, Y_train, Y_test = train_test_split(data[:, 0:8], data[:, 8],\n",
        "                                                    test_size=0.25, random_state=87)\n",
        "np.random.seed(155)\n",
        "model = Sequential()  # create model\n",
        "model.add(Dense(20, input_dim=8, activation='relu'))  # hidden layer\n",
        "model.add(Dense(25, input_dim=8, activation='relu'))  # hidden layer\n",
        "model.add(Dense(30, input_dim=8, activation='relu'))  # hidden layer\n",
        "model.add(Dense(1, activation='sigmoid'))  # output layer\n",
        "model.compile(loss='binary_crossentropy',\n",
        "              optimizer='adam', metrics=['acc'])\n",
        "model.fit(X_train, Y_train, epochs=100,\n",
        "          initial_epoch=0)\n",
        "print(model.summary())\n",
        "print(model.evaluate(X_test, Y_test))"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "576/576 [==============================] - 0s 250us/step - loss: 2.9447 - acc: 0.4618\n",
            "Epoch 2/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.8824 - acc: 0.6007\n",
            "Epoch 3/100\n",
            "576/576 [==============================] - 0s 59us/step - loss: 0.7302 - acc: 0.6580\n",
            "Epoch 4/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.6444 - acc: 0.6701\n",
            "Epoch 5/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.6254 - acc: 0.6840\n",
            "Epoch 6/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.6152 - acc: 0.6788\n",
            "Epoch 7/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.6029 - acc: 0.7014\n",
            "Epoch 8/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.5962 - acc: 0.6979\n",
            "Epoch 9/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5787 - acc: 0.6979\n",
            "Epoch 10/100\n",
            "576/576 [==============================] - 0s 68us/step - loss: 0.5759 - acc: 0.7031\n",
            "Epoch 11/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5788 - acc: 0.7153\n",
            "Epoch 12/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.5990 - acc: 0.6892\n",
            "Epoch 13/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.5669 - acc: 0.7083\n",
            "Epoch 14/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.5972 - acc: 0.6962\n",
            "Epoch 15/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.6402 - acc: 0.6771\n",
            "Epoch 16/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.6368 - acc: 0.6858\n",
            "Epoch 17/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.5429 - acc: 0.7483\n",
            "Epoch 18/100\n",
            "576/576 [==============================] - 0s 60us/step - loss: 0.5356 - acc: 0.7431\n",
            "Epoch 19/100\n",
            "576/576 [==============================] - 0s 54us/step - loss: 0.5521 - acc: 0.7135\n",
            "Epoch 20/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5561 - acc: 0.7344\n",
            "Epoch 21/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.5594 - acc: 0.7118\n",
            "Epoch 22/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5488 - acc: 0.7448\n",
            "Epoch 23/100\n",
            "576/576 [==============================] - 0s 55us/step - loss: 0.5268 - acc: 0.7326\n",
            "Epoch 24/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5932 - acc: 0.7049\n",
            "Epoch 25/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.5608 - acc: 0.7205\n",
            "Epoch 26/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5349 - acc: 0.7396\n",
            "Epoch 27/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5272 - acc: 0.7413\n",
            "Epoch 28/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5582 - acc: 0.7396\n",
            "Epoch 29/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5451 - acc: 0.7378\n",
            "Epoch 30/100\n",
            "576/576 [==============================] - 0s 47us/step - loss: 0.5419 - acc: 0.7396\n",
            "Epoch 31/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.5643 - acc: 0.7014\n",
            "Epoch 32/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5375 - acc: 0.7500\n",
            "Epoch 33/100\n",
            "576/576 [==============================] - 0s 44us/step - loss: 0.5372 - acc: 0.7378\n",
            "Epoch 34/100\n",
            "576/576 [==============================] - 0s 52us/step - loss: 0.5180 - acc: 0.7396\n",
            "Epoch 35/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5404 - acc: 0.7257\n",
            "Epoch 36/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5143 - acc: 0.7569\n",
            "Epoch 37/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5269 - acc: 0.7535\n",
            "Epoch 38/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.5301 - acc: 0.7344\n",
            "Epoch 39/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.5182 - acc: 0.7535\n",
            "Epoch 40/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5222 - acc: 0.7569\n",
            "Epoch 41/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.5164 - acc: 0.7552\n",
            "Epoch 42/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5382 - acc: 0.7378\n",
            "Epoch 43/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5174 - acc: 0.7656\n",
            "Epoch 44/100\n",
            "576/576 [==============================] - 0s 61us/step - loss: 0.5386 - acc: 0.7378\n",
            "Epoch 45/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5396 - acc: 0.7396\n",
            "Epoch 46/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.5314 - acc: 0.7604\n",
            "Epoch 47/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.5411 - acc: 0.7309\n",
            "Epoch 48/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5274 - acc: 0.7413\n",
            "Epoch 49/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5116 - acc: 0.7674\n",
            "Epoch 50/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.5121 - acc: 0.7500\n",
            "Epoch 51/100\n",
            "576/576 [==============================] - 0s 54us/step - loss: 0.5071 - acc: 0.7622\n",
            "Epoch 52/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.5013 - acc: 0.7500\n",
            "Epoch 53/100\n",
            "576/576 [==============================] - 0s 55us/step - loss: 0.4976 - acc: 0.7674\n",
            "Epoch 54/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.5199 - acc: 0.7674\n",
            "Epoch 55/100\n",
            "576/576 [==============================] - 0s 52us/step - loss: 0.5248 - acc: 0.7413\n",
            "Epoch 56/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.5018 - acc: 0.7708\n",
            "Epoch 57/100\n",
            "576/576 [==============================] - 0s 62us/step - loss: 0.5571 - acc: 0.7344\n",
            "Epoch 58/100\n",
            "576/576 [==============================] - 0s 60us/step - loss: 0.5684 - acc: 0.7222\n",
            "Epoch 59/100\n",
            "576/576 [==============================] - 0s 53us/step - loss: 0.5438 - acc: 0.7292\n",
            "Epoch 60/100\n",
            "576/576 [==============================] - 0s 52us/step - loss: 0.5217 - acc: 0.7517\n",
            "Epoch 61/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.4951 - acc: 0.7760\n",
            "Epoch 62/100\n",
            "576/576 [==============================] - 0s 55us/step - loss: 0.4941 - acc: 0.7830\n",
            "Epoch 63/100\n",
            "576/576 [==============================] - 0s 50us/step - loss: 0.4997 - acc: 0.7708\n",
            "Epoch 64/100\n",
            "576/576 [==============================] - 0s 55us/step - loss: 0.5315 - acc: 0.7535\n",
            "Epoch 65/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5241 - acc: 0.7378\n",
            "Epoch 66/100\n",
            "576/576 [==============================] - 0s 52us/step - loss: 0.5326 - acc: 0.7396\n",
            "Epoch 67/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5032 - acc: 0.7483\n",
            "Epoch 68/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5087 - acc: 0.7604\n",
            "Epoch 69/100\n",
            "576/576 [==============================] - 0s 53us/step - loss: 0.5182 - acc: 0.7535\n",
            "Epoch 70/100\n",
            "576/576 [==============================] - 0s 51us/step - loss: 0.4936 - acc: 0.7795\n",
            "Epoch 71/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.4910 - acc: 0.7743\n",
            "Epoch 72/100\n",
            "576/576 [==============================] - 0s 52us/step - loss: 0.4873 - acc: 0.7691\n",
            "Epoch 73/100\n",
            "576/576 [==============================] - 0s 55us/step - loss: 0.4968 - acc: 0.7604\n",
            "Epoch 74/100\n",
            "576/576 [==============================] - 0s 54us/step - loss: 0.5284 - acc: 0.7465\n",
            "Epoch 75/100\n",
            "576/576 [==============================] - 0s 54us/step - loss: 0.5374 - acc: 0.7448\n",
            "Epoch 76/100\n",
            "576/576 [==============================] - 0s 58us/step - loss: 0.4965 - acc: 0.7656\n",
            "Epoch 77/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5281 - acc: 0.7396\n",
            "Epoch 78/100\n",
            "576/576 [==============================] - 0s 58us/step - loss: 0.5083 - acc: 0.7639\n",
            "Epoch 79/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.5739 - acc: 0.7240\n",
            "Epoch 80/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.5233 - acc: 0.7448\n",
            "Epoch 81/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.4840 - acc: 0.7778\n",
            "Epoch 82/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.5054 - acc: 0.7622\n",
            "Epoch 83/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.4876 - acc: 0.7691\n",
            "Epoch 84/100\n",
            "576/576 [==============================] - 0s 46us/step - loss: 0.4770 - acc: 0.7830\n",
            "Epoch 85/100\n",
            "576/576 [==============================] - 0s 54us/step - loss: 0.4756 - acc: 0.7812\n",
            "Epoch 86/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.5097 - acc: 0.7569\n",
            "Epoch 87/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.5212 - acc: 0.7639\n",
            "Epoch 88/100\n",
            "576/576 [==============================] - 0s 45us/step - loss: 0.4927 - acc: 0.7760\n",
            "Epoch 89/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.4852 - acc: 0.7865\n",
            "Epoch 90/100\n",
            "576/576 [==============================] - 0s 48us/step - loss: 0.4886 - acc: 0.7691\n",
            "Epoch 91/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.4953 - acc: 0.7882\n",
            "Epoch 92/100\n",
            "576/576 [==============================] - 0s 58us/step - loss: 0.4878 - acc: 0.7604\n",
            "Epoch 93/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.4701 - acc: 0.7882\n",
            "Epoch 94/100\n",
            "576/576 [==============================] - 0s 53us/step - loss: 0.4800 - acc: 0.7691\n",
            "Epoch 95/100\n",
            "576/576 [==============================] - 0s 52us/step - loss: 0.4682 - acc: 0.7812\n",
            "Epoch 96/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.4713 - acc: 0.7778\n",
            "Epoch 97/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.4710 - acc: 0.7812\n",
            "Epoch 98/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.4778 - acc: 0.7760\n",
            "Epoch 99/100\n",
            "576/576 [==============================] - 0s 49us/step - loss: 0.4650 - acc: 0.7899\n",
            "Epoch 100/100\n",
            "576/576 [==============================] - 0s 52us/step - loss: 0.4724 - acc: 0.7830\n",
            "Model: \"sequential_2\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_5 (Dense)              (None, 20)                180       \n",
            "_________________________________________________________________\n",
            "dense_6 (Dense)              (None, 25)                525       \n",
            "_________________________________________________________________\n",
            "dense_7 (Dense)              (None, 30)                780       \n",
            "_________________________________________________________________\n",
            "dense_8 (Dense)              (None, 1)                 31        \n",
            "=================================================================\n",
            "Total params: 1,516\n",
            "Trainable params: 1,516\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "192/192 [==============================] - 0s 133us/step\n",
            "[0.6079476674397787, 0.7083333134651184]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hSYYoa3ugI1w",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 336
        },
        "outputId": "ef7e246f-1c18-419a-a6a2-680ea3c6362d"
      },
      "source": [
        "\n",
        "# Importing the libraries\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "from keras.models import Sequential\n",
        "from keras.layers.core import Dense\n",
        "\n",
        "# load dataset\n",
        "import pandas as pd\n",
        "dataset = pd.read_csv(\"breastcancer.csv\")\n",
        "\n",
        "# Features extraction\n",
        "X = dataset.iloc[:, 2:32].values\n",
        "y = dataset.iloc[:, 1].values\n",
        "\n",
        "print(dataset.iloc[:, 1].value_counts())\n",
        "\n",
        "# Encoding categorical data\n",
        "le = LabelEncoder()\n",
        "# Fit label encoder and return encoded labels M=1, B=0\n",
        "y = le.fit_transform(y)\n",
        "\n",
        "sc = StandardScaler()\n",
        "X_scaled = sc.fit_transform(X)\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(\n",
        "    X_scaled, y, test_size=0.25, random_state=0)\n",
        "\n",
        "# Model Implementation\n",
        "model = Sequential()  # create model\n",
        "model.add(Dense(20, input_dim=30, activation='relu'))  # hidden layer\n",
        "model.add(Dense(1, activation='sigmoid'))  # output layer\n",
        "model.compile(loss='binary_crossentropy',\n",
        "                    optimizer='adam', metrics=['accuracy'])\n",
        "model.fit(X_train, y_train, epochs=100, verbose=0,\n",
        "                                     initial_epoch=0)\n",
        "\n",
        "print(model.summary())\n",
        "print(model.evaluate(X_test, y_test))"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "B    357\n",
            "M    212\n",
            "Name: diagnosis, dtype: int64\n",
            "Model: \"sequential_3\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_9 (Dense)              (None, 20)                620       \n",
            "_________________________________________________________________\n",
            "dense_10 (Dense)             (None, 1)                 21        \n",
            "=================================================================\n",
            "Total params: 641\n",
            "Trainable params: 641\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "None\n",
            "143/143 [==============================] - 0s 121us/step\n",
            "[0.08591647748346928, 0.9580419659614563]\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}